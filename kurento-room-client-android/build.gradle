apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: "com.jfrog.bintray"

version "1.0.16"

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 7
        versionName "1.0.16"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
//    compile('fi.vtt.nubomedia:jsonrpc-ws-android:1.0.6@aar') { transitive = true }
//    compile('fi.vtt.nubomedia:utilities-android:1.0.1@aar') { transitive = true }
    compile('io.pristine:libjingle:11139@aar') { transitive = true }
//    compile 'fi.vtt.nubomedia:webrtcpeer-android:1.0.9'
    compile project(':jsonrpc-ws-android')
    compile project(':utilities-android')
    compile project(':webrtcpeer-android')
}

def siteUrl = 'https://github.com/nubomedia-vtt/kurento-room-client-android'      // Homepage URL of the library
def gitUrl = 'https://github.com/nubomedia-vtt/kurento-room-client-android.git'   // Git repository URL
group = "fi.vtt.nubomedia"                      // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'kurento-room-client-android'
                description = 'Android library for making kurento Room API calls'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The BSD 3-Clause License'
                        url 'https://github.com/nubomedia-vtt/kurento-room-client-android/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'jpsjanne'
                        name 'Janne Sepp√§nen'
                        email 'janne.seppanen@vtt.fi'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// https://github.com/bintray/gradle-bintray-plugin
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        // it is the name that appears in bintray when logged
        name = "kurento-room-client-android"
        websiteUrl = siteUrl
		userOrg = 'nubomedia-vtt'
        vcsUrl = gitUrl
        licenses = ["BSD 3-Clause"]
        publish = true
        version {
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password") //Optional. The passphrase for GPG signing'
            }
//            mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = properties.getProperty("bintray.oss.user") //OSS user token
//                password = properties.getProperty("bintray.oss.password") //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
        }
    }
}
